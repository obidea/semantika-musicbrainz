@prefix rr: <http://www.w3.org/ns/r2rml#> .

@prefix lb: <https://github.com/LinkedBrainz/r2rml/v0.1#> .
@prefix ngs: <http://musicbrainz.org/NGS> .

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix mo: <http://purl.org/ontology/mo/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ov: <http://open.vocab.org/terms/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix event: <http://purl.org/NET/c4dm/event.owl#> .
@prefix is: <http://purl.org/ontology/is/core#> .
@prefix isi: <http://purl.org/ontology/is/inst/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix tl: <http://purl.org/NET/c4dm/timeline.owl#> .

# MB release => mo:Release, mo:ReleaseEvent

lb:sm_artist rr:template "http://musicbrainz.org/artist/{gid}#_" .
lb:sm_release rr:template "http://musicbrainz.org/release/{gid}#_" .
lb:sm_release_event rr:template "http://musicbrainz.org/release/{gid}#{country}" .

lb:Release a rr:TriplesMap ;
  rr:logicalTable [rr:tableName "release"] ;
  rr:subjectMap 
    [rr:class mo:Release ;
     rr:template "http://musicbrainz.org/release/{gid}#_"] ;
  rr:predicateObjectMap 
    [rr:predicate mo:musicbrainz_guid ;
     rr:objectMap [rr:column "gid"; rr:datatype xsd:string]] ,
#
#lb:release_name a rr:TriplesMap ;
#  rr:logicalTable [rr:sqlQuery 
#    """SELECT release.gid, release_name.name  
#       FROM release
#            INNER JOIN release_name ON release.name = release_name.id"""] ;
#  rr:subjectMap lb:sm_release ;
#  rr:predicateObjectMap 
    [rr:predicate dc:title ;
     rr:objectMap [rr:column "name" ; rr:datatype xsd:string]] .

lb:release_record a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, medium.id
       FROM release
            INNER JOIN medium ON release.id = medium.release"""] ;
  rr:subjectMap lb:sm_release ;
  rr:predicateObjectMap 
    [rr:predicate mo:record ;
     rr:objectMap 
       [rr:template "http://musicbrainz.org/record/{id}#_"]] .


#BN: this mapping was missing entirely from LinkedBrainz
# See https://groups.google.com/group/music-ontology-specification-group
# at /browse_thread/thread/9ace96518564e8aa
lb:release_release_group a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, release_group.gid AS release_group_gid
       FROM release
            INNER JOIN release_group 
              ON release.release_group = release_group.id"""] ;
  rr:subjectMap lb:sm_release ;
  rr:predicateObjectMap 
    [rr:predicate event:factor ;
     rr:objectMap 
       [rr:template "http://musicbrainz.org/signal-group/{release_group_gid}#_"]] .

lb:release_label a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery
    """SELECT release.gid, label.gid AS label_gid 
       FROM label 
         INNER JOIN release_label ON label.id = release_label.label
         INNER JOIN release ON release.id = release_label.release"""] ;
  rr:subjectMap lb:sm_release ;
  rr:predicateObjectMap 
    [rr:predicate mo:label;
     rr:objectMap 
       [rr:template "http://musicbrainz.org/label/{label_gid}#_"]] .

lb:ReleaseEvent a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, area.gid AS country
       FROM release 
         INNER JOIN release_country ON release_country.release = release.id
         INNER JOIN area ON area.id = release_country.country
       WHERE date_year IS NOT NULL
         AND date_month IS NOT NULL
         AND date_day IS NOT NULL"""] ;
  rr:subjectMap [rr:class mo:ReleaseEvent ;
                 rr:template "http://musicbrainz.org/release/{gid}#{country}"] ;
  rr:predicateObjectMap 
    [rr:predicate mo:release ; 
     rr:objectMap [rr:template "http://musicbrainz.org/release/{gid}#_"]] .

lb:release_event_date a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, 
              BTRIM(TO_CHAR(date_year, '0000')) || '-' || 
                BTRIM(TO_CHAR(date_month, '00')) || '-' ||
                BTRIM(TO_CHAR(date_day, '00')) AS date,
              area.gid AS country
       FROM release 
         INNER JOIN release_country ON release_country.release = release.id
         INNER JOIN area ON area.id = release_country.country
       WHERE date_year IS NOT NULL 
         AND date_month IS NOT NULL 
         AND date_day IS NOT NULL"""] ;
  rr:subjectMap lb:sm_release_event ;
  rr:predicateObjectMap 
    [rr:predicate dc:date ;
     rr:objectMap [rr:column "date"; rr:datatype xsd:date]] .

lb:release_event_date_year_month a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, 
              BTRIM(TO_CHAR(date_year, '0000')) || '-' || 
                BTRIM(TO_CHAR(date_month, '00')) AS year_month,
              area.gid AS country
       FROM release 
         INNER JOIN release_country ON release_country.release = release.id
         INNER JOIN area ON area.id = release_country.country
       WHERE date_year IS NOT NULL 
         AND date_month IS NOT NULL 
         AND date_day IS NULL"""] ;
  rr:subjectMap lb:sm_release_event ;
  rr:predicateObjectMap 
    [rr:predicate dc:date ;
     rr:objectMap [rr:column "year_month"; rr:datatype xsd:gYearMonth]] .

lb:release_event_date_year a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, 
              BTRIM(TO_CHAR(date_year, '0000')) AS year,
              area.gid AS country
       FROM release 
         INNER JOIN release_country ON release_country.release = release.id
         INNER JOIN area ON area.id = release_country.country
       WHERE date_year IS NOT NULL 
         AND date_month IS NULL 
         AND date_day IS NULL"""] ;
  rr:subjectMap lb:sm_release_event ;
  rr:predicateObjectMap 
    [rr:predicate dc:date ;
     rr:objectMap [rr:column "year"; rr:datatype xsd:gYear]] .

lb:release_event_place a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT release.gid, area.gid AS country
       FROM release 
         INNER JOIN release_country ON release_country.release = release.id
         INNER JOIN area ON area.id = release_country.country"""] ;
  rr:subjectMap lb:sm_release_event ;
  rr:predicateObjectMap 
    [rr:predicate event:place ;
     rr:objectMap [rr:template "http://musicbrainz.org/area/{country}#_" ;
                   rr:termType rr:IRI]] .

lb:release_annotation a rr:TriplesMap ;
  rr:logicalTable [rr:sqlQuery 
    """SELECT gid, text 
       FROM annotation 
         INNER JOIN release_annotation 
           ON annotation.id = release_annotation.annotation
         INNER JOIN release ON release_annotation.release = release.id"""] ;
  rr:subjectMap lb:sm_release ;
  rr:predicateObjectMap 
    [rr:predicate rdfs:comment ;
     rr:objectMap [rr:column "text"]] .
